#!/usr/bin/python3

import argparse
import os
import subprocess
import sys
import time


def get_connection():
    """Get the name of the current connection on wlan0."""
    process_result = subprocess.run(['nmcli', '--terse', '--fields',
                                     'GENERAL.CONNECTION', 'device', 'show',
                                     'wlan0'], stdout=subprocess.PIPE)
    if process_result.returncode != 0:
        sys.exit(1)

    stdout = process_result.stdout.decode('utf-8')
    connection = stdout.split(':')[1].splitlines()[0]

    return connection


def set_connection(connection):
    """Set the given connection up."""
    subprocess.run(['nmcli', 'connection', 'up', connection])


def reload_modules():
    """Disable the current connection, reload the wifi modules and restart the
    connection."""
    saved_connection = get_connection()

    subprocess.run(['nmcli', 'device', 'disconnect', 'wlan0'])
    if os.getuid() is 0:
        subprocess.run(['modprobe', '-r', 'iwlmvm', 'iwlwifi'])
        time.sleep(2)
        subprocess.run(['modprobe', 'iwlmvm'])

    time.sleep(2)
    set_connection(saved_connection)


def restart_nm():
    if os.getuid() is 0:
        subprocess.run(['systemctl', 'stop', 'NetworkManager'])


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='manage the wifi')
    parser.add_argument('-k', '--reload-kmod', action='store_true',
                        help='reload the kernel modules')
    parser.add_argument('-r', '--restart-nm', action='store_true',
                        help='restart nm-manager')
    parser.add_argument('-a', '--access-point', action='store_true',
                        help='turn wifi to access-point')
    arguments = parser.parse_args()

    if arguments.reload_kmod:
        reload_modules()

    if arguments.restart_nm:
        restart_nm()

    if arguments.access_point:
        set_connection('Hotspot')
        sys.exit(0)

    if get_connection() == 'Hotspot':
        subprocess.run(['nmcli', 'connection', 'down', 'Hotspot'])
